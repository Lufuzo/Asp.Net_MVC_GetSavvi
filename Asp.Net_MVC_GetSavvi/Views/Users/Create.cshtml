@model Entities.Models.Users

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />


    @if (!string.IsNullOrEmpty(ViewBag.LoginId))
    {
        <div class="alert alert-success">
            @ViewBag.LoginId
        </div>
    }
    <form id="UserFrm" asp-action="Create" method="post">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "Name", @placeholder = "Enter name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                <small id="nameError" class="text-danger"></small>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", @id = "Surname", @placeholder = "Enter surname" }  })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", @id = "MobileNumber", @placeholder = "Enter mobile" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdNumber, new { htmlAttributes = new { @class = "form-control", @id = "IDNumber", @placeholder = "Enter idNumber" } })
                @Html.ValidationMessageFor(model => model.IdNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "emailAdress", @placeholder = "Enter  email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.loginId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.loginId, new { @class = "form-control", @value = ViewBag.LoginId, @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.loginId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </form>

    <script>
        $(document).ready(function () {
            $("#UserFrm").submit(function (event) {
                var valid = true;

                // No empty fields
                $("input[type=text], input[type=number]", this).each(function () {
                    if ($(this).val() === "") {
                        valid = false;
                        $(this).addClass("error");
                    }
                });

                // Name and Surname contain only alphabetical characters
                if (!/^[a-zA-Z]+$/.test($("#Name").val())) {
                    valid = false;
                    $("#Name").addClass("error");
                }
                if (!/^[a-zA-Z]+$/.test($("#Surname").val())) {
                    valid = false;
                    $("#Surname").addClass("error");
                }

                // Mobile Number contains only numeric characters and has the correct length
                var mobileNumber = $("#MobileNumber").val();
                if (!/^\d+$/.test(mobileNumber) || (mobileNumber.length < 10 || mobileNumber.length > 11)) {
                    valid = false;
                    $("#MobileNumber").addClass("error");
                }

                // ID Number has the correct length and is not duplicate
                var idNumber = $("#IDNumber").val();
                if (idNumber.length !== 13) {
                    valid = false;
                    $("#IDNumber").addClass("error");
                } else {
       
                    $.ajax({
                        url: "/Users/CheckIDDuplicate",
                        type: "POST",
                        data: { idNumber: idNumber },
                        async: false,
                        success: function (result) {
                            if (result.duplicate) {
                                valid = false;
                                $("#IDNumber").addClass("error");
                            }
                        }
                    });
                }

                // Username contains only alphanumeric characters
                if (!/^[a-zA-Z0-9]+$/.test($("#Username").val())) {
                    valid = false;
                    $("#Username").addClass("error");
                }

                // Prevent form submission if any validation failed
                if (!valid) {
                    event.preventDefault();
                }
            });
        });
    </script>



</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
